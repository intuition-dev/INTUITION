extends /layout/layout

block main
   script(src='comps/card-comp.js')
   section.l-section-container
      .container
         .columns
            .column.col-11.col-mx-auto
               include:metaMD text.md
               card-comp

               script.

                  depp.require(['2nd'], function() {

                     axios.get('items.json').then(function(resp) {

                        var currentTime = Math.floor(new Date().getTime()/1000.0); 

                        var items = resp.data.items.filter(e => {
                              if (typeof publishDate === 'undefined') {
                                 return true;
                              }
                              var res = e.publishDate <= currentTime;
                              return res;

                           }).sort(function(a, b) {
                           return (a.publishOrder < b.publishOrder) ? -1 : (a.publishOrder > b.publishOrder) ? 1 : 0;
                        });
                        
                        var tag = riot.mount('card-comp')[0]; //- mount the first tag
                        tag.render(items);


                        //- depp.require(['cssJs'], function() {

                        //-    //- search
                        //-    $('#srch-form').disableAutoFill();
                        //-    const srchOptions = {
                        //-          shouldSort: true,
                        //-          threshold: 0.3,
                        //-          maxPatternLength: 64,
                        //-          keys: [
                        //-             "title",
                        //-             "content_text",
                        //-             "comment",
                        //-             "url",
                        //-             "summary"
                        //-          ]
                        //-    }//search

                        //-    pgContainer =[];
                        //-    pgContCount=-1;
                        //-    setupPg(guessShow(), sortedItems);
                           
                        //-    //search
                        //-    fuse = new Fuse(items, srchOptions);
                        //-    $('#srch-form').submit(function(e) {
                        //-          e.preventDefault();
                        //-          onSrch();
                        //-    });//search

                        //- });

                        //- function setupPg(perPage, sortedItems_) {
                        //-    pgContCount++;
                        //-    pgContainer[pgContCount] = $('#pagination-container');

                        //-    perPage = 6;

                        //-    pgContainer[pgContCount].pagination({
                        //-          className: 'paginationjs-theme-blue',
                        //-          dataSource: sortedItems_,
                        //-          locator: 'items',
                        //-          pageSize: perPage,
                        //-          autoHidePrevious: true,
                        //-          autoHideNext: true,
                        //-          callback: function(data, pagination) {
                        //-             tag.render(data);
                        //-          }
                        //-    });

                        //- }//()

                        //- function guessShow() {
                        //-    var n = ( $(window).width() * $(window).height()  ) / ( 300 * 400) * .9;
                        //-    n = Math.round( n * .7);
                        //-    console.info('g', n);
                        //-    return n;
                        //- }

                        //- //search
                        //- function onSrch() {
                        //-    var s = $('#srchFld').val();
                        //-    console.log('srch', s);
                        //-    pgContainer[pgContCount].pagination('disable');
                        //-    pgContainer[pgContCount].pagination('hide');
                        //-    pgContainer[pgContCount].pagination('destroy');

                        //-    if(!s || s.length < 1) {
                        //-          setupPg(guessShow(), sortedItems);
                        //-          return;
                        //-    }//fi

                        //-    //else we search
                        //-    var items = fuse.search(s);
                        //-    if(!items || items.length < 1) {// not found
                        //-          tag.render();
                        //-          return;
                        //-    }//fi

                        //-    var found = {};
                        //-    found.items = items;
                        //-    setupPg(guessShow(), found);
                        //- }//() search

                     });

                  });