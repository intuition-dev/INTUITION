// mB v5.05.40 on 2019-05-16T11:03:42.454Z
var httpRPC = function() {
    function httpRPC(httpOrs, host, port) {
     this.httpOrs = httpOrs, this.host = host, this.port = port, this.user = 'guest', 
     window.location.origin || (window.location.protocol, window.location.hostname, window.location.port && window.location.port);
    }
    return httpRPC.prototype.setUser = function(user, pswd) {
     this.user = user, this.pswd = pswd;
    }, httpRPC.prototype.invoke = function(ent, method, params) {
     var formData = new FormData();
     formData.append('params', JSON.stringify(params)), formData.append('user', btoa(this.user)), 
     formData.append('pswd', btoa(this.pswd)), formData.append('method', method);
     var THIZ = this;
     return new Promise(function(resolve, reject) {
      var url = THIZ.httpOrs + '://' + THIZ.host + ':' + THIZ.port + ent;
      fetch(url, {
       body: formData,
       method: 'post'
      }).then(function(fullResp) {
       var obj = fullResp.json();
       if (fullResp.ok) {
        return obj;
       }
       reject(obj);
      }).then(function(resp) {
       resp.errorMessage && reject(resp), resolve(resp.result);
      }).catch(function(err) {
       reject(err);
      });
     });
    }, httpRPC;
   }();
