// v4.16.19 on 2019-02-25T00:30:58.242Z
var Example1Service = function() {
 function Example1Service() {
  this.entityName = 'table_one2';
 }
 return Example1Service.prototype.read = function(id) {
  var ref = db1.collection(this.entityName);
  return id ? db1.collection(this.entityName).doc(id).get().then(function(docSnap) {
   var temp = docSnap.data();
   return temp.id = docSnap.id, temp;
  }).catch(function(error) {}) : ref.get().then(function(querySnapshot) {
   var rows = [];
   return querySnapshot.forEach(function(doc) {
    var row = doc.data();
    row.id = doc.id, rows.push(row);
   }), rows;
  }).catch(function(error) {});
 }, Example1Service.prototype.add = function(row) {
  return row.id && delete row.id, db1.collection(this.entityName).doc().set(row).then(function() {}).catch(function(error) {});
 }, Example1Service.prototype.update = function(row) {
  var id = row.id;
  return delete row.id, db1.collection(this.entityName).doc(id).set(row).then(function() {
   return id;
  }).catch(function(error) {});
 }, Example1Service.prototype.delete = function(row) {
  var id = row.id;
  return db1.collection(this.entityName).doc(id).delete().then(function() {}).catch(function(error) {});
 }, Example1Service.prototype.valid = function(row) {
  var col1 = row.col1, col2 = row.col2;
  return validator.isEmpty(col1, {
   ignore_whitespace: !0
  }) ? 'Col1 is blank' : validator.isEmpty(col2, {
   ignore_whitespace: !0
  }) ? 'Col2 is blank' : 'OK';
 }, Example1Service;
}();