// mB v6.06.29 on 2019-06-27T14:24:40.587Z
class Editors{constructor(){this.drawTable=this.drawTable.bind(this),this.save=this.save.bind(this),this.remove=this.remove.bind(this),this.intuAPI=new IntuAPI,this.table=null,this.activeRow=null}drawTable(){this.intuAPI.getEditorsList().then(t=>{Array.isArray(t)?this.table=new Tabulator("#editors-table",{data:t,layout:"fitColumns",columns:[{title:"id",field:"id",visible:!1},{title:"Email",field:"email",align:"left"},{title:"Name",field:"name",align:"left"}],rowClick:(t,e)=>{this.activeRow=e
e=e.getData()
window.rowUid=e.id,$('input[name="name"]').val(e.name),$('input[name="email"], input[name="password"]').val(""),$("html, body").animate({scrollTop:$("#editor-form").offset().top},500)}}):window.location="/admin"}).then(this.initActionButtons)}save(t){let e=$("#editor-form input[name='password']").val(),i=$("#editor-form input[name='email']").val(),a=$("#editor-form input[name='name']").val()
if(t){if(void 0===t||""===t||""===a)throw new Error("no user selected to edit")
return this.intuAPI.editEditor(t,a).then(e=>{$(".notification").removeClass("d-hide").find(".text").text("user was successfully updated"),$(".grid-form input").val(""),setTimeout(function(){$(".notification").addClass("d-hide").find(".text").text("")},4e3),$("html, body").animate({scrollTop:$("#editor-form").offset().top},500),this.table.updateOrAddData([{id:t,name:a}]).then(function(){}).catch(function(t){})})}if(""===i||""===e)throw $(".js-add-editor").removeAttr("disabled"),$(".loader").removeClass("active"),$(".notification").removeClass("d-hide").find(".text").text("User email and password can't be blank"),setTimeout(function(){$(".notification").addClass("d-hide").find(".text").text("")},2e3),new Error("user data is empty")
return this.intuAPI.addEditor(a,i,e).then(t=>{$(".notification").removeClass("d-hide").find(".text").text("new user was created"),$(".grid-form input").val(""),setTimeout(function(){$(".notification").addClass("d-hide").find(".text").text("")},4e3),$("html, body").animate({scrollTop:$("#editor-form").offset().top},500),this.table.updateOrAddData([{id:t.id,email:i,name:a}]).then(function(){}).catch(function(t){})}).catch(t=>{void 0!==t&&alert("Unable to create user: "+t.errorMessage),$(".notification").removeClass("d-hide").addClass("error-msg").find(".text").text("an error occured, user wasn't created",t),setTimeout(function(){$(".notification").addClass("d-hide").removeClass("error-msg").find(".text").text("")},4e3)})}remove(t){return this.intuAPI.deleteEditor(t).then(()=>{$(".notification").removeClass("d-hide").find(".text").text(" The user was successfully deleted"),$(".grid-form input").val(""),setTimeout(function(){$(".notification").addClass("d-hide").find(".text").text("")},4e3),$("html, body").animate({scrollTop:$("#editor-form").offset().top},500),this.activeRow.delete().then(function(){}).catch(function(t){})}).catch(function(t){alert("Unable to delete user: "+t)})}}