// mB v6.06.21 on 2019-06-17T10:36:20.576Z
class IntuAPI{constructor(){this.serviceRPC=new httpRPC(apiProtocol,apiHost,apiPort)}checkEditor(e,s){let i=this
return this.serviceRPC.invoke("/api/editors/checkEditor","check-editor",{editor_email:e,editor_pass:s}).then(function(t){return!!t&&(i.serviceRPC.setUser(e,s),!0)})}getDirsList(){let e=window.sessionStorage.getItem("username"),s=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/posts","get",{editor_email:e,editor_pass:s})}getSubDirsList(e){let s=window.sessionStorage.getItem("username"),i=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/files","get",{post_id:e,editor_email:s,editor_pass:i})}getFile(e,s){let i=window.sessionStorage.getItem("username"),t=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/post-get","get",{post_id:e,pathPrefix:s,editor_email:i,editor_pass:t})}saveFile(e,s,i){let t=window.sessionStorage.getItem("username"),o=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/post-put","put",{post_id:e,pathPrefix:i,content:btoa(s),editor_email:t,editor_pass:o})}mbakeCompile(e,s,i){let t=window.sessionStorage.getItem("username"),o=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/post-build","put",{post_id:e,pathPrefix:i,content:btoa(s),editor_email:t,editor_pass:o}).then(function(e){return e}).catch(function(e){return e})}clonePage(e,s){let i=window.sessionStorage.getItem("username"),t=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/new-post","post",{post_id:e,pathPrefix:s,editor_email:i,editor_pass:t})}upload(e,s){let i=window.sessionStorage.getItem("username"),t=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/upload","post",{pathPrefix:s,editor_email:i,editor_pass:t},e.get("sampleFile")).then(function(e){}).catch(function(e){})}setPublishDate(e,s){let i=window.sessionStorage.getItem("username"),t=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/set-publish-date","put",{publish_date:e,post_id:s,editor_email:i,editor_pass:t})}getMbakeVersion(){let e=window.sessionStorage.getItem("username"),s=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/editors/mbake-version","get",{editor_email:e,editor_pass:s}).then(function(e){})}sendVcodEditor(e){return this.serviceRPC.invoke("/api/editors/resetPassword","code",{admin_email:e}).then(function(){return!0})}resetPassEditor(e,s,i){return this.serviceRPC.invoke("/api/editors/resetPassword","reset-password",{admin_email:e,code:s,password:i})}checkAdmin(e,s){let i=this
return this.serviceRPC.invoke("/api/admin/checkAdmin","check-admin",{admin_email:e,admin_pass:s}).then(function(t){return!!t&&(i.serviceRPC.setUser(e,s),!0)})}setupApp(e){let s=window.sessionStorage.getItem("username"),i=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/admin/setup-app","setup-app",{item:e,admin_email:s,admin_pass:i})}getEditorsList(){let e=window.sessionStorage.getItem("username"),s=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/admin/editors","get",{admin_email:e,admin_pass:s})}addEditor(e,s,i){let t=window.sessionStorage.getItem("username"),o=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/admin/editors-add","post",{name:e,email:s,password:i,admin_email:t,admin_pass:o})}editEditor(e,s){return this.serviceRPC.invoke("/api/admin/editors-edit","put",{name:s,uid:e,admin_email:window.sessionStorage.getItem("username"),admin_pass:window.sessionStorage.getItem("password")})}deleteEditor(e){return this.serviceRPC.invoke("/api/admin/editors-delete","delete",{uid:e,admin_email:window.sessionStorage.getItem("username"),admin_pass:window.sessionStorage.getItem("password")})}sendVcode(e){return this.serviceRPC.invoke("/api/admin/resetPassword","code",{admin_email:e}).then(function(){return!0})}resetPass(e,s,i){return this.serviceRPC.invoke("/api/admin/resetPassword","reset-password",{admin_email:e,code:s,password:i})}getConfig(){let e=window.sessionStorage.getItem("username"),s=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/admin/get-config","get-config",{admin_email:e,admin_pass:s})}saveConfig(e,s){let i=window.sessionStorage.getItem("username"),t=window.sessionStorage.getItem("password")
return this.serviceRPC.invoke("/api/admin/save-config","save-config",{admin_email:i,admin_pass:t,port:e,path:s})}createConfig(e){var s=e.filter(e=>"email"==e.name)[0].value,i=e.filter(e=>"password"==e.name)[0].value,t=e.filter(e=>"service_id"==e.name)[0].value,o=e.filter(e=>"template_id"==e.name)[0].value,r=e.filter(e=>"user_id"==e.name)[0].value
return this.serviceRPC.invoke("/setup","setup",{email:s,password:i,emailjsService_id:t,emailjsTemplate_id:o,emailjsUser_id:r}).then(e=>e).catch(e=>{})}}