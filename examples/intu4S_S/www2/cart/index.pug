
extends /layout/itemLayout

block head2
    script.
        console.log('fetch data and comp')// who gets back first?
        var pro = fetchItems('/items/items.json')
        depp.define({'cart-custel':'/custel/cart/cart-custel.js'})
        depp.require(['cart-custel'])

block main

    .cart
        #cart-items.py-5

        .d-flex.justify-content-end
            button(type='button', data-toggle='modal', data-target='#addressModal').d-inline-block.bl-desc__btn.mb-5 Next

    .modal(tabindex='-1', role='dialog', aria-labelledby='exampleModalLabel', aria-hidden='true')#addressModal
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5.modal-title Shipping address
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') Ã—
                .modal-body
                    #address-form.grid-form.py-5
                        fieldset
                            legend Please, enter your address
                            div(data-row-span='2')
                                div(data-field-span='1')
                                    label Name
                                    input(type='text', name='name')
                                div(data-field-span='1')
                                    label Company
                                    input(type='text', name='company')
                            div(data-row-span='2')
                                div(data-field-span='1')
                                    label address1
                                    input(type='text', name='address1')
                                div(data-field-span='1')
                                    label address2
                                    input(type='text', name='address2')
                            div(data-row-span='2')
                                div(data-field-span='1')
                                    label city
                                    input(type='text', name='city')
                                div(data-field-span='1')
                                    label state_code
                                    input(type='text', name='state_code')
                            div(data-row-span='2')
                                div(data-field-span='1')
                                    label country_code
                                    input(type='text', name='country_code')
                                div(data-field-span='1')
                                    label zip
                                    input(type='number', name='zip')
                        button.bl-desc__btn.my-5.js-stripe-checkout Proceed to checkout

    script.
        var items = [];
        var prefix;
        var cartWcomp;

        depp.require(['popup']); 

        // binding step 1:
        addE1Listener('fetchItems', onGotData)
        // binding step 2:
        function onGotData(evt) { 
            depp.require(['cart-custel'], function(){ //both data and UI is ready
                bind(evt)
            })
        }//()

        function bind(evt) {
            items = evt.items;
            prefix = evt.prefix;
            var parent = document.getElementById('cart-items')
            cartWcomp = addElementDe(parent, 'cart-custel', 'cart')
            window.addEventListener('cart-storage-changed', function() {
                console.log('Cart storage changed')
                render()
            });

            render();
        }//()

        function render() {
            var cart = localStorage.getItem('cart');
            if (cart === null) {
                cart = {};
            } else {
                cart = JSON.parse(cart);
            }

            console.log("Items", items)
            console.log("Cart", cart)

            data = [];
            for (itemId in cart) {
                let itemSize = cart[itemId]['size'];
                let itemIdKey = 'size' + itemSize;
                let itemData = items.filter(item => item.item[itemIdKey] == itemId)[0]
                console.log('itemData', itemData)
                if (typeof itemData !== 'undefined') {
                    data.push({
                        id: itemId,
                        size: itemSize,
                        quantity: cart[itemId]['quantity'],
                        itemData: itemData,
                        prefix: prefix
                    })
                }
            }
            setAttrDa(cartWcomp, data)
        }

        // checkout
        depp.require(['FontsLoaded', 'bsDefaultStyle', 'DOM', 'pre'], function() {

            depp.require(['stripe'], function() {

                var stripe = Stripe('pk_test_GnYVBEvEsvWrOAtuxETrAFU500y63B4nQK');
                var services = new Services()

                $('.js-stripe-checkout').on('click', function (ev) {
                    var data = [];
                    JSON.parse($('cart-custel').attr('data')).forEach(element => data.push({ 
                        id: element.id,
                        name: element.itemData.item.name,
                        amount: element.itemData.item.price * 100,
                        image: element.itemData.item.url + element.itemData.image,
                        url: element.itemData.item.url,
                        description: element.itemData.title,
                        quantity: element.quantity,
                        currency: 'USD'
                    }));
                    var addressForm = $('#address-form');
                    var address = {
                        name: addressForm.find('input[name="name"]').val(),
                        company: addressForm.find('input[name="company"]').val(),
                        address1: addressForm.find('input[name="address1"]').val(),
                        address2: addressForm.find('input[name="address2"]').val(),
                        city: addressForm.find('input[name="city"]').val(),
                        state_code: addressForm.find('input[name="state_code"]').val(),
                        country_code: addressForm.find('input[name="country_code"]').val(),
                        zip: addressForm.find('input[name="zip"]').val(),
                    };
                    console.log('CHECKOUT', data, address);

                    services.getSessionId(data, address)
                        .then(function (session) {
                            console.log("TCL: sessionId", session)
                            stripe.redirectToCheckout({
                            sessionId: session.id
                            }).then(function (result) {
                            console.log("TCL: result", result.error.message)
                            // If `redirectToCheckout` fails due to a browser or network
                            // error, display the localized error message to your customer
                            // using `result.error.message`.
                            });
                        })

                });

            });

        });