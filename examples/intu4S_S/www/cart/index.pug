
extends /layout/itemLayout

block head2
    script.
        console.log('fetch data and comp')// who gets back first?
        var pro = fetchItems('/items/items.json')
        depp.define({'cart-wcomp':'/wcomps/cart/cart-wcomp.js'})
        depp.require(['cart-wcomp'])

block main

    .cart
        #cart-items.py-5

        .d-flex.justify-content-end
            a(href='/address').d-inline-block.bl-desc__btn.mb-5 Proceed to checkout


    script.
        var items = [];
        var prefix;
        var cartWcomp;

        // binding step 1:
        addE1Listener('fetchItems', onGotData)
        // binding step 2:
        function onGotData(evt) { 
            depp.require(['cart-wcomp'], function(){ //both data and UI is ready
                bind(evt)
            })
        }//()

        function bind(evt) {
            items = evt.items;
            prefix = evt.prefix;
            var parent = document.getElementById('cart-items')
            cartWcomp = addElementDe(parent, 'cart-wcomp', 'cart')
            window.addEventListener('cart-storage-changed', function() {
                console.log('Cart storage changed')
                render()
            });

            render();
        }//()

        function render() {
            var cart = localStorage.getItem('cart');
            if (cart === null) {
                cart = {};
            } else {
                cart = JSON.parse(cart);
            }

            console.log('items', items)
            console.log("Cart", cart)

            data = [];
            for (itemId in cart) {
                for (size in cart[itemId]) {
                    let itemData = items.filter(item => item.item.id == itemId)[0]
                    console.log('itemData', itemData)
                    if (typeof itemData !== 'undefined') {
                        data.push({
                            id: itemId,
                            size: size,
                            quantity: cart[itemId][size]['quantity'],
                            itemData: itemData,
                            prefix: prefix
                        })
                    }
                }
            }
            setAttrDa(cartWcomp, data)
        }
