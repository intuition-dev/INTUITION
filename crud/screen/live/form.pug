
-// field names must mach table cols
#form1.grid-form(autocomplete="off")
   fieldset
      legend Form
      div(data-row-span='2')
         div(data-field-span='1')
            label Field 1
            input(name='col1', type='text')
         div(data-field-span='1')
            label Field 2
            input(name='col2', type='text')
   div(hidden='', name='id')

.buts
   button#clearBut.btn Clear
   button#addBut.btn Add data
   button#saveBut.btn Save data
   button#refBut.btn Refresh
   button#popBut.btn Popup

style.
   .buts button {
      margin: .5rem;
   }

script.

   depp.require(['tabReady'], function() {
      console.log('FORM')
      bindingForm.init('form1')

      addEventListener('row', bindingForm._onData)
      setupForm()
   
   })

   function setupForm() {
      $('#clearBut').click(function(){
         bindingForm.clearFields()
      })//click
      $('#addBut').click(function(){
         let row = bindingForm.getFields() 
         let msg = bindingForm.vmod.valid(row)
         console.log(msg)
         if(msg=='OK')
            bindingForm.vmod.add(row)
         else  {
            bindingForm.popError({
               type: 'error',
               title: 'Oops...',
               text: msg
            })
         } //else
      })//click
      $('#saveBut').click(function(){
         let row = bindingForm.getFields()
         let msg = bindingForm.vmod.valid(row)
         console.log(msg)
         if(msg=='OK')
            bindingForm.vmod.update( row )
         else  {
            bindingForm.popError({
               type: 'error',
               title: 'Oops...',
               text: msg
            })
         } //else
      })//click
      $('#refBut').click(function(){
         bindingForm.clearFields()
         bindingTab.vmod.read(bindingTab)
      })//click

      $('#popBut').click(function(){ 
         bindingForm.popError({
            type: 'error',
            title: 'Oops...',
            text: 'Something wrong!'
         })
      })//click
   } //()

script.

   class BindForm extends BaseDBind {

      init(divId){
         console.log('init')
         this.form = '#'+divId
      }   
      

      getVMod() {
         return this.vmod 
      }

      _onData(evt) {
         const row = evt.detail.data
         const ctx = evt.detail.ctx
         console.log(ctx.getClassName())
         console.log(row)
         ctx.setFields(row, ctx)
      }
   
   }