// v5.02.11 on 2019-03-19T10:34:53.267Z
!function($) {
 var realPassword = [], realFields = [], _helper = {};
 Array.prototype.insert = function(index, item) {
  this.splice(index, 0, item);
 }, _helper.passwordListener = function(obj, settings) {
  var passObj = '' == settings.passwordFiled ? '.disabledAutoFillPassword' : settings.passwordFiled;
  obj.find('[type=password]').length > 0 && obj.find('[type=password]').attr('type', 'text').addClass('disabledAutoFillPassword'), 
  $(obj).on('keyup', passObj, function() {
   for (var tmpPassword = $(this).val(), passwordLen = tmpPassword.length, currKeyupPos = this.selectionStart, i = 0; i < passwordLen; i++) {
    '*' != tmpPassword[i] && (void 0 === realPassword[i] ? realPassword[i] = tmpPassword[i] : currKeyupPos != passwordLen && realPassword.insert(currKeyupPos - 1, tmpPassword[i]));
   }
   $(this).val(tmpPassword.replace(/./g, '*')), settings.debugMode;
  });
 }, _helper.formSubmitListener = function(obj, settings) {
  var btnObj = '' == settings.submitButton ? '.disableAutoFillSubmit' : settings.submitButton;
  $(obj).on('click', btnObj, function(event) {
   _helper.restoreInput(obj, settings), settings.callback.call() && (settings.debugMode || obj.submit()), 
   settings.randomizeInputName && _helper.randomizeInput(obj, settings), _helper.passwordListener(obj, settings);
  });
 }, _helper.randomizeInput = function(obj, settings) {
  obj.find('input').each(function(i) {
   realFields[i] = $(this).attr('name'), $(this).attr('name', Math.random().toString(36).replace(/[^a-z]+/g, ''));
  });
 }, _helper.restoreInput = function(obj, settings) {
  settings.randomizeInputName && obj.find('input').each(function(i) {
   $(this).attr('name', realFields[i]);
  }), settings.textToPassword && obj.find(settings.passwordFiled).attr('type', 'password'), 
  obj.find(settings.passwordFiled).val(realPassword.join(''));
 }, $.fn.disableAutoFill = function(options) {
  var settings = $.extend({}, $.fn.disableAutoFill.defaults, options);
  this.find('[type=submit]').length > 0 && this.find('[type=submit]').attr('type', 'button').addClass('disableAutoFillSubmit'), 
  this.attr('autocomplete', 'off'), settings.randomizeInputName && _helper.randomizeInput(this, settings), 
  _helper.passwordListener(this, settings), _helper.formSubmitListener(this, settings);
 }, $.fn.disableAutoFill.defaults = {
  debugMode: !1,
  textToPassword: !0,
  randomizeInputName: !0,
  passwordFiled: '',
  submitButton: '',
  callback: function() {
   return !0;
  }
 };
}(jQuery);