// v5.02.11 on 2019-03-29T09:04:07.451Z
var FormViewModel = function() {
 function FormViewModel() {
  this._dataObj = {}, this.dataSourceType = 'fake', this.exampleModel = new TabulatorService();
 }
 return FormViewModel.prototype.getViewForm = function(formName) {
  if ('form1' == formName) {
   return this._dataObj;
  }
 }, FormViewModel.prototype.read = function(id) {
  var _this = this;
  if ('fake' == this.dataSourceType) {
   return Promise.all([ {
    id: 1,
    col1: " Bob11",
    col2: "Bob12"
   } ]).then(function(data) {
    Object.assign(_this._dataObj, data[0]);
   });
  }
  return Promise.all([ this.exampleModel.read(id) ]).then(function(data) {
   Object.assign(_this._dataObj, data[0]);
  });
 }, FormViewModel.prototype.add = function(row, cb) {
  return this.exampleModel.add(row);
 }, FormViewModel.prototype.update = function(row, cb) {
  return this.exampleModel.update(row, cb);
 }, FormViewModel.prototype.delete = function(row) {
  return this.exampleModel.delete(row);
 }, FormViewModel.prototype.valid = function(row) {
  var col1 = row.col1, col2 = row.col2;
  return validator.isEmpty(col1, {
   ignore_whitespace: !0
  }) ? 'Col1 is blank' : validator.isEmpty(col2, {
   ignore_whitespace: !0
  }) ? 'Col2 is blank' : 'OK';
 }, FormViewModel;
}();