// v5.02.11 on 2019-03-29T09:04:07.451Z
class TabulatorVMTest {
 test1() {
  QUnit.test('got the data for the TabulatorViewModel', function(assert) {
   var viewModel = new TabulatorViewModel();
   return new Promise(function(resolve, reject) {
    setTimeout(function() {
     resolve(viewModel.read());
    }, 300);
   }).then(function() {
    let data = viewModel.getViewList('example-table');
    assert.ok(data.length, 'there is some data');
   });
  });
 }
 test2() {
  QUnit.test('got the data for the FormViewModel with id=1', function(assert) {
   var viewModel = new FormViewModel();
   return new Promise(function(resolve, reject) {
    setTimeout(function() {
     resolve(viewModel.read('1'));
    }, 300);
   }).then(function() {
    let data = viewModel.getViewForm('example-table');
    assert.ok(data, 'there is some data');
   });
  });
 }
}